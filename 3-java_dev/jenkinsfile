pipeline {
    agent any

     parameters {
        password(name: 'DB_PASSWORD', defaultValue: '', description: 'Senha do database')  
        string(name: 'SQL_DEV', defaultValue: '', description: 'IP do database de DEV')
    //     string(name: 'SQL_STAG', defaultValue: '', description: 'IP do database de DEV')
    //     string(name: 'SQL_PROD', defaultValue: '', description: 'IP do database de DEV')
    }

    stages {
        
        stage('Download Infra Code') {
            steps {
                git url: 'git@github.com:manoel1845/gama-desafio-final.git', branch: 'main'
            }
        }

        stage('Download App Code') {
            steps {
                sh 'rm -rf app-code'
                sh 'mkdir app-code && cd app-code'
                dir ('app-code'){
                    git url: 'https://github.com/Didox/spring-web-youtube.git', branch: 'main'
                }
            }
        }

        stage('Build App') {
            steps {
                sh 'cd app-code && ./mvnw package -Dmaven.test.skip -DskipTests -Dmaven.javadoc.skip=true'
                echo 'Building..'
            }
        }

        stage('Test App') {
            steps {
                sh "export USER=root && export PASSWORD=\"$DB_PASSWORD\" && export DATABASE_URL='mysql://$SQL_DEV:3306/SpringWebYoutubeTest?useTimezone=true&serverTimezone=UTC' && cd app-code && ./mvnw test"
                echo 'Testing....'
            }
        }

        // stage('Create and Push Docker image') {
        //     steps {
        //         sh "cd app-code && docker build -t manoel1845/javaspring:0.0.1 -f Dockerfile . && docker push manoel1845/javaspring:0.0.1"
        //         echo 'pushing docker image..'
        //     }
        // }

        stage('Create and Push Docker image') {
            steps {
                sh 'chmod +x 3-java-dev/buildImage.sh'
                sh "3-java-dev/buildImage.sh"
                echo 'pushing docker image..'
            }
        }

        stage('Deploy Dev') {
            steps {
                sh 'chmod +x 3-java-dev/deployDev.sh'
                sh "3-java-dev/deployDev.sh"
            }
        }

        // stage('Deploy Stag') {
        //     steps {
        //         sh 'chmod +x 05-pipelineAPP/deployStag.sh'
        //         sh "05-pipelineAPP/deployStag.sh"
        //     }
        // }

        // stage('Deploy Prod') {
        //     steps {
        //         sh 'chmod +x 05-pipelineAPP/deployProd.sh'
        //         sh "05-pipelineAPP/deployProd.sh"
        //     }
        // }
    }
}